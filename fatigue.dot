digraph {
  unhappy[
    shape="box",
    style=rounded,
    label="React vous rend triste."
  ]
  unhappy -> are_you_using_react_boilerplates;

  # Boilerplate Fatigue

  are_you_using_react_boilerplates[
    shape="diamond",
    label="Apprenez-vous React
    en copiant du code-modèle ?"
  ]
  are_you_using_react_boilerplates -> boilerplates_dont_teach[label="oui"]
  are_you_using_react_boilerplates -> steal_from_boilerplates[label="non"]

  boilerplates_dont_teach[
    shape="box",
    label="Apprendre React en copiant du code-modèle,
    c'est comme apprendre à cuisiner en mangeant
    dans des restaurants gastronomiques. Ça ne marche pas.
    Vous devez débuter par les bases et ignorer la peur
    infondée de passer à côté de quelque-chose.
    Les gens créent des modèles de code pour montrer
    ce qu'ils savent faire ou ce qu'ils ont appris,
    pas pour vous aider à apprendre. Ils sont créés
    pour et par des utilisateurs expérimentés, et
    sont souvent bien plus expérimentaux qu'ils
    ne veulent bien l'admettre. Les différents
    codes-modèles concourrent pour avoir de l'attention,
    ce qui mène à plus de surcharge. Si vous voulez
    vraiment apprendre React, apprenez-le dans
    l'ordre préconisé par Pete Hunt dans son guide :
    https://github.com/petehunt/react-howto (en anglais).
    Ne regardez pas du code-modèle avant de
    savoir en créer."
  ]
  boilerplates_dont_teach -> are_you_using_flux

  steal_from_boilerplates[
    shape="box",
    label="Le code-modèle n'est pas une bonne
    manière d'apprendre les technologies qui
    y sont combinées. Pourtant, il est utile de
    voir comment ces technologies peuvent être
    utilisées ensemble *une fois que* vous êtes
    à l'aise avec chacune d'entre elles
    séparément. C'est une bonne façon de
    découvrir de nouvelles technologies mais vous
    ne devriez pas vous sentir obligés de toutes
    les utiliser. N'abandonnez pas totalement
    le code-modèle. Gardez juste à l'esprit
    qu'un modèle de code n'est qu'une liste
    d'astuces, pas une base solide pour votre
    application."
  ]
  steal_from_boilerplates -> are_you_using_flux

  # Flux Fatigue

  are_you_using_flux[
    shape="diamond",
    label="Utilisez-vous une librairie
    Flux (ou Redux) ?"
  ]
  are_you_using_flux -> is_too_much_flux[label="oui"]
  are_you_using_flux -> is_not_enough_flux[label="non"]

  is_too_much_flux[
    shape="diamond",
    label="Est-ce qu'elle ajoute beaucoup
    de répétitions sans régler de
    problèmes évidents ?"
  ]
  is_too_much_flux -> remove_flux[label="oui"]
  is_too_much_flux -> are_you_using_bundler[label="non"]

  is_not_enough_flux[
    shape="diamond",
    label="Avez-vous quelques composants
    à états surchargés en haut de votre
    hiérarchie de composants, qui sont
    souvent à la source de bugs ?"
  ]
  is_not_enough_flux -> add_flux[label="oui"]
  is_not_enough_flux -> are_you_using_bundler[label="non"]

  add_flux[
    shape="box",
    label="Réfléchissez à ajouter une librairie Flux.
    Elle peut vous aider à externaliser les états
    partagés entre beaucoup de composants et à les
    maintenir à jour de manière cohérente."
  ]
  add_flux -> are_you_using_bundler

  remove_flux[
    shape="box",
    label="Supprimez la librairie Flux.
    Acquérez une bonne intuition de la manière
    dont il faut structurer les applications
    React de base en lisant
    « Thinking in React » (en anglais)
    dans la documentation officielle."
  ]
  remove_flux -> are_you_using_bundler

  # Bundler Fatigue

  are_you_using_bundler[
    shape="diamond",
    label="Utilisez vous un paqueteur JavaScript
    (par exemple Webpack ou Browserify) ?"
  ]
  are_you_using_bundler -> are_you_working_on_production_app_with_bundler[label="oui"]
  are_you_using_bundler -> are_you_working_on_production_app_without_bundler[label="non"]

  are_you_working_on_production_app_with_bundler[
    shape="diamond",
    label="Travaillez-vous sur une
    application en production ?"
  ]
  are_you_working_on_production_app_with_bundler -> do_you_know_es2015[label="oui"]
  are_you_working_on_production_app_with_bundler -> remove_bundler[label="non"]

  are_you_working_on_production_app_without_bundler[
    shape="diamond",
    label="Travaillez-vous sur une
    application en production ?"
  ]
  are_you_working_on_production_app_without_bundler -> add_bundler[label="oui"]
  are_you_working_on_production_app_without_bundler -> do_you_know_es2015[label="non"]

  add_bundler[
    shape="box",
    label="Ajoutez un paqueteur comme une
    étape de votre build pour mieux gérer
    vos dépendances et distribuer le code
    JavaScript efficacement. Utilisez l'outil
    Google Page Speed insights pour jauger
    votre efficacité. N'oubliez pas de passer
    votre code à travers des outils
    minify et envify."
  ]
  add_bundler -> do_you_know_es2015

  remove_bundler[
    shape="box",
    label="Pas besoin de paqueteur si vous
    êtes en train d'apprendre React.
    Copiez https://github.com/jarsbe/react-simple
    et commencez à bidouiller sans faire de build.
    Utilisez des balises <script> jusqu'à ce
    que vous soyez à l'aise avec React et que vous
    vouliez en apprendre plus sur les systèmes de
    modules et les paqueteurs."
  ]
  remove_bundler -> do_you_know_es2015

  # ES2015 Fatigue

  do_you_know_es2015[
    shape="diamond",
    label="Vous sentez-vous à l'aise
    avec les fonctionnalités ES2015
    (par exemple les classes et les
    fonctions fléchées) ?"
  ]
  do_you_know_es2015 -> use_es5[label="non"]
  do_you_know_es2015 -> are_you_using_dangerous_features[label="oui"]

  use_es5[
    shape="box",
    label="N'utilisez pas encore ES2015.
    Vous n'en avez pas besoin pour apprendre React.
    Les librairies tierces utiliseront souvent la
    syntaxe ES2015 dans leur documentation mais
    vous n'avez pas besoin de librairies tierces
    lorsque vous apprenez uniquement React.
    Lorsque vous voudrez rafraîchir
    vos connaissances sur JavaScript,
    https://leanpub.com/understandinges6/read
    est un guide fabuleux. Servez-vous de
    http://babeljs.io/repl pour tester vos
    suppositions."
  ]
  use_es5 -> do_you_update_packages_asap

  # ESnext Fatigue

  are_you_using_dangerous_features[
    shape="diamond",
    label="Utilisez-vous des
    fonctionnalités expérimentales
    du langage qui n'ont pas été
    incluses dans ES2015
    (par exemple les décorateurs) ?"
  ]
  are_you_using_dangerous_features -> can_you_spend_days_on_your_tooling[label="oui"]
  are_you_using_dangerous_features -> do_you_update_packages_asap[label="non"]

  can_you_spend_days_on_your_tooling[
    shape="diamond",
    label="Pouvez-vous vous permettre
    de passer des jours à corriger votre
    outillage toutes les quelques semaines
    à cause de bugs, d'incompatibilités
    et de changements des standards ?"
  ]
  can_you_spend_days_on_your_tooling -> do_you_update_packages_asap[label="oui"]
  can_you_spend_days_on_your_tooling -> stick_to_es2015[label="non"]

  stick_to_es2015[
    shape="box",
    label="Restez-en à ES2015, JSX et
    l'opérateur de propagation d'objets."
  ]
  stick_to_es2015 -> do_you_update_packages_asap

  # Semver Fatigue

  do_you_update_packages_asap[
    shape="diamond",
    label="Mettez-vous à jour vos dépendances
    vers les nouvelles versions majeures
    dès qu'elles sortent ?"
  ]
  do_you_update_packages_asap -> give_it_two_months[label="oui"]
  do_you_update_packages_asap -> consider_updating_react[label="non"]

  give_it_two_months[
    shape="box",
    label="À moins que nous ne parlions de React
    qui est testé lourdement avant chaque sortie,
    réfléchissez à ralentir votre rythme de mise
    à jour de paquets. Vous pouvez essayer les
    nouvelles versions des dépendances mais c'est
    mieux de les garder dans une branche à part
    pour quelques mois pendant que la communauté
    cherche et corrige les problèmes les plus
    courants. Ne prenez pas de décisions en ayant
    peur de passer à côté de quelque-chose ! Si
    vous cherchez de la documentation plus vieille,
    n'oubliez pas de regarder les anciennes
    sorties de versions sur GitHub, par exemple
    https://github.com/reactjs/react-router/tree/0.13.x/doc"
  ]
  give_it_two_months -> are_you_still_sad

  consider_updating_react[
    shape="box",
    label="C'est judicieux. Cependant,
    nous vous encourageons à essayer
    (dans une branche à part !) les
    nouvelles versions de React dès lors
    qu'elles sortent. À l'inverse de
    beaucoup de paquets de la communauté,
    elles sont testées lourdement par
    Facebook. Gardez un œil sur les
    notes de version qui fournissent des
    liens vers des codemods qui automatisent
    des parties du processus de migration
    pour vous."
  ]
  consider_updating_react -> are_you_still_sad

  # End

  are_you_still_sad[
    shape="diamond",
    label="Êtes-vous toujours triste ?"
  ]
  are_you_still_sad -> rant[label="oui"];
  are_you_still_sad -> happy[label="non"];

  rant[
    shape="box",
    label="Écrivez un billet de blog
    constructif sur les problèmes rencontrés.
    Abstenez-vous d'attaques personnelles.
    Soyez poli. Aidez la communauté à
    trouver des solutions. Pensez à
    d'autres solutions qui remplissent
    mieux vos besoins (comme Ember)."
  ]
  rant -> happy

  happy[
    shape="box",
    label="React vous rend heureux !
    Tout du moins, il ne vous rend plus aussi triste."
  ]
  happy -> share

  share [
    shape="box",
    style=rounded,
    label="Partagez ce diagramme : http://bit.ly/react-vous-rend-triste.
    Basé sur et inspiré par https://github.com/petehunt/react-howto.
    Traduit de l'anglais de https://github.com/gaearon/react-makes-you-sad."
  ]
}
